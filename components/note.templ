package components

import (
	"fmt"
	"github.com/yulog/mi-diary/domain/model"
	"time"
)

type Note struct {
	Title      string
	Profile    string
	Host       string
	SearchPath string
	Items      []model.Note
}

css grid() {
	grid-template-columns: repeat(auto-fit, 128px);
}

css cell() {
	width: fit-content;
}

templ lightboxStyle() {
	<style type="text/css">
		img.Thumbnail {
			height: 128px;
			width: 128px;
			object-fit: contain;
		}
		.lum-lightbox.lum-open{
			z-index: 30;
		}
	</style>
}

templ lightboxScript() {
	<script type="text/javascript">
		new LuminousGallery(document.querySelectorAll(".luminous"), {}, {
  			caption: (elem) => {
				return elem.querySelector("img").getAttribute("alt");
  			}
		});
	</script>
}

templ (n Note) WithPage() {
	@BaseWithNav(n.Title, n.Profile) {
		@noteList(n.Host, n.Items)
	}
}

templ (n Note) WithPages(p Pages) {
	@BaseWithNav(n.Title, n.Profile) {
		@SearchBar(n.SearchPath, p.QueryParams.S)
		@Pagination(p) {
			@noteList(n.Host, n.Items)
		}
	}
}

templ cardImage(file model.File) {
	<div class="card-image">
		<a href={ templ.URL(file.URL) } class="luminous">
			<figure class="image">
				<img src={ file.ThumbnailURL } alt={ file.Name } class="Thumbnail"/>
			</figure>
		</a>
	</div>
}

// TODO: imgに代替画像を入れる？
templ cardPlaceholder(file model.File) {
	<div class="card-image">
		<a href={ templ.URL(file.URL) }>
			<figure class="image">
				<img src={ file.ThumbnailURL } alt={ file.Name } class="Thumbnail"/>
			</figure>
		</a>
	</div>
}

templ noteContent(host string, note model.Note) {
	<div class="media">
		<div class="media-left">
			<figure class="image is-48x48">
				<img class="is-rounded" src={ note.User.AvatarURL } alt={ fmt.Sprintf("%s Avatar", note.User.DisplayName) }/>
			</figure>
		</div>
		<div class="media-content">
			<p>
				{ note.User.DisplayName }
			</p>
			<p class="has-text-grey">
				{ fmt.Sprintf("@%s", note.User.Name) }
			</p>
		</div>
	</div>
	<div class="content">
		<div>
			{ note.Text }
		</div>
		<div class={ "grid", grid() }>
			for _,file := range note.Files {
				<div class={ "cell", cell() }>
					<div class="card">
						@cardImage(file)
					</div>
				</div>
			}
		</div>
		<a href={ templ.URL(fmt.Sprintf("https://%s/notes/%s", host, note.ID)) } target="_blank" class="has-text-grey is-underlined">
			// SQLite は日時をUTCで保持する
			{ note.ID } ({ note.CreatedAt.In(time.Local).Format(time.DateTime) })
		</a>
	</div>
}

templ noteList(host string, items []model.Note) {
	@lightboxStyle()
	<ul class="columns is-multiline">
		for _, item := range items {
			@CardAsListIsFull() {
				@noteContent(host, item)
			}
		}
	</ul>
	@lightboxScript()
}
