package components

import (
	"fmt"
	"github.com/yulog/mi-diary/internal/shared"
)

type Pages struct {
	Current int
	Prev    Page
	Next    Page
	Last    Page

	QueryParams shared.QueryParams
}

type Page struct {
	Index int
	Has   bool
}

templ Pagination(p Pages) {
	@pager(p)
	<div class="block">
		{ children... }
	</div>
	@pager(p)
}

templ paginationLink(q shared.QueryParams, num int) {
	<li>
		<a href={ templ.URL(q.SetPage(num).GetQuery()) } class="pagination-link">
			{ fmt.Sprintf("%d", num) }
		</a>
	</li>
}

templ pager(p Pages) {
	<nav class="pagination is-rounded" role="navigation" aria-label="pagination">
		if p.Prev.Has {
			<a href={ templ.URL(p.QueryParams.SetPage(p.Prev.Index).GetQuery()) } class="pagination-previous">Prev</a>
		} else {
			<span class="pagination-previous is-disabled">Prev</span>
		}
		if p.Next.Has {
			<a href={ templ.URL(p.QueryParams.SetPage(p.Next.Index).GetQuery()) } class="pagination-next">Next</a>
		} else {
			<span class="pagination-next is-disabled">Next</span>
		}
		<ul class="pagination-list">
			if p.Current > 2 {
				@paginationLink(p.QueryParams, 1)
				<li><span class="pagination-ellipsis">&hellip;</span></li>
			}
			if p.Prev.Has {
				@paginationLink(p.QueryParams, p.Prev.Index)
			}
			<li>
				<span class="pagination-link is-current">
					{ fmt.Sprintf("%d", p.Current) }
				</span>
			</li>
			if p.Next.Has {
				@paginationLink(p.QueryParams, p.Next.Index)
			}
			if p.Last.Has {
				<li><span class="pagination-ellipsis">&hellip;</span></li>
				@paginationLink(p.QueryParams, p.Last.Index)
			}
		</ul>
	</nav>
}
