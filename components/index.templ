package components

import (
	"fmt"
	"github.com/yulog/mi-diary/domain/model"
)

type IndexParams struct {
	Title     string
	Profile   string
	Reactions []model.ReactionEmoji
	HashTags  []model.HashTag
	Users     []model.User
}

templ (p IndexParams) Index() {
	@BaseWithNav(p.Title, p.Profile) {
		<div class="content">
			<div class="columns is-multiline">
				@CardIsFull() {
					<h3>Reactions</h3>
					@reaction(p.Profile, p.Reactions)
				}
				@CardIsFull() {
					<h3>HashTags</h3>
					<div
						id="hashtag-list"
						hx-get={ fmt.Sprintf("/profiles/%s/hashtags?partial=true&sort=count", p.Profile) }
						hx-trigger="load"
						hx-swap="outerHTML"
					></div>
				}
				@CardIsFull() {
					<div class="level">
						<h3>Users</h3>
						<div class="buttons has-addons is-right">
							<button
								id="sort-count"
								hx-get={ fmt.Sprintf("/profiles/%s/users?partial=true&sort=count", p.Profile) }
								hx-target="#user-list"
								hx-swap="outerHTML"
								class="button is-rounded is-primary is-selected is-outlined"
								_="on click
            					   add .is-primary .is-selected .is-outlined to me
            					   remove .is-primary .is-selected .is-outlined from #sort-name"
							>
								Count
							</button>
							<button
								id="sort-name"
								hx-get={ fmt.Sprintf("/profiles/%s/users?partial=true&sort=name", p.Profile) }
								hx-target="#user-list"
								hx-swap="outerHTML"
								class="button is-rounded"
								_="on click
            					   add .is-primary .is-selected .is-outlined to me
            					   remove .is-primary .is-selected .is-outlined from #sort-count"
							>
								Name
							</button>
						</div>
					</div>
					<div
						id="user-list"
						hx-get={ fmt.Sprintf("/profiles/%s/users?partial=true&sort=count", p.Profile) }
						hx-trigger="load"
						hx-swap="outerHTML"
					></div>
				}
				@CardFrame() {
					@CardContent() {
						<h3>Notes</h3>
					}
					@CardFooter() {
						<a href={ templ.URL(fmt.Sprintf("/profiles/%s/notes", p.Profile)) } class="card-footer-item">View All</a>
					}
				}
				@CardFrame() {
					@CardContent() {
						<h3>Files</h3>
					}
					@CardFooter() {
						<a href={ templ.URL(fmt.Sprintf("/profiles/%s/files", p.Profile)) } class="card-footer-item">View All</a>
					}
				}
				@CardFrame() {
					@CardContent() {
						<h3>Archives</h3>
					}
					@CardFooter() {
						<a href={ templ.URL(fmt.Sprintf("/profiles/%s/archives", p.Profile)) } class="card-footer-item">View All</a>
					}
				}
			</div>
		</div>
	}
}
