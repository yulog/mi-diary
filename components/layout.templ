package components

import (
	"fmt"
	"github.com/google/go-querystring/query"
)

templ Head(title string) {
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width"/>
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@1.0.1/css/bulma.min.css"/>
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/luminous-lightbox@2.4.0/dist/luminous-basic.min.css"/>
			<script src="https://unpkg.com/htmx.org@2.0.1/dist/htmx.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/luminous-lightbox@2.4.0/dist/luminous.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/@twemoji/api@latest/dist/twemoji.min.js" crossorigin="anonymous"></script>
			<title>{ title }</title>
		</head>
		{ children... }
	</html>
}

templ BaseWithNav(title, profile string) {
	@Head(title) {
		<body class="has-navbar-fixed-top" hx-boost="true">
			<nav class="navbar is-fixed-top is-primary" role="navigation" aria-label="main navigation">
				<div class="navbar-brand">
					<a href={ templ.URL(fmt.Sprintf("/profiles/%s", profile)) } class="navbar-item">Mi Diary</a>
				</div>
				<div class="navbar-end">
					<a href={ templ.URL(fmt.Sprintf("/profiles/%s", profile)) } class="navbar-item">Home</a>
					<a href={ templ.URL("/manage") } class="navbar-item">Manage</a>
					<a href={ templ.URL("/") } class="navbar-item">Profiles</a>
				</div>
			</nav>
			<main class="section">
				{ children... }
			</main>
		</body>
	}
}

templ BaseWithoutNav(title string) {
	@Head(title) {
		<body class="has-navbar-fixed-top" hx-boost="true">
			<main class="section">
				{ children... }
			</main>
		</body>
	}
}

type Pages struct {
	Current int
	Prev    int
	Next    int
	Last    int
	HasNext bool
	HasLast bool

	QueryParams QueryParams
}

type QueryParams struct {
	Page int    `url:"page"`
	S    string `url:"s,omitempty"`
}

templ Pagination(p Pages) {
	@pager(p)
	<div class="block">
		{ children... }
	</div>
	@pager(p)
}

func (q *QueryParams) getPageQuery(p int) templ.SafeURL {
	q.Page = p
	v, _ := query.Values(q)
	return templ.URL("?" + v.Encode())
}

templ paginationLink(q QueryParams, num int) {
	<li>
		<a href={ q.getPageQuery(num) } class="pagination-link">
			{ fmt.Sprintf("%d", num) }
		</a>
	</li>
}

templ pager(p Pages) {
	<nav class="pagination is-rounded" role="navigation" aria-label="pagination">
		if p.Prev != 0 {
			<a href={ p.QueryParams.getPageQuery(p.Prev) } class="pagination-previous">Prev</a>
		} else {
			<span class="pagination-previous is-disabled">Prev</span>
		}
		if p.HasNext {
			<a href={ p.QueryParams.getPageQuery(p.Next) } class="pagination-next">Next</a>
		} else {
			<span class="pagination-next is-disabled">Next</span>
		}
		<ul class="pagination-list">
			if p.Current > 2 {
				@paginationLink(p.QueryParams, 1)
				<li><span class="pagination-ellipsis">&hellip;</span></li>
			}
			if p.Prev != 0 {
				@paginationLink(p.QueryParams, p.Prev)
			}
			<li>
				<span class="pagination-link is-current">
					{ fmt.Sprintf("%d", p.Current) }
				</span>
			</li>
			if p.HasNext {
				@paginationLink(p.QueryParams, p.Next)
			}
			if p.HasLast {
				<li><span class="pagination-ellipsis">&hellip;</span></li>
				@paginationLink(p.QueryParams, p.Last)
			}
		</ul>
	</nav>
}
