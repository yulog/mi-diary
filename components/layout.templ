package components

import (
	"fmt"
)

templ Base(title string) {
	<!DOCTYPE html>
	<html>
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width"/>
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"/>
			<link rel="stylesheet" type="text/css" href="https://unpkg.com/bulma-prefers-dark"/>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<title>{ title }</title>
		</head>
		<body class="has-navbar-fixed-top" hx-boost="true">
			<nav class="navbar is-fixed-top is-primary" role="navigation" aria-label="main navigation">
				<div class="navbar-brand"><a href="/" class="navbar-item">Mi Diary</a></div>
				<div class="navbar-end">
					<a href="/" class="navbar-item">Home</a>
					<a href={ templ.URL("/settings") } class="navbar-item">Settings</a>
				</div>
			</nav>
			<main class="section">
				{ children... }
			</main>
		</body>
	</html>
}

type Pages struct {
	Current int
	Prev    int
	Next    int
	Last    int
	HasNext bool
	HasLast bool
}

templ Pagination(title string, p Pages) {
	@Base(title) {
		@pager(p)
		<div class="block">
			{ children... }
		</div>
		@pager(p)
	}
}

templ pager(p Pages) {
	<nav class="pagination is-rounded" role="navigation" aria-label="pagination">
		if p.Prev != 0 {
			<a href={ templ.URL(fmt.Sprintf("?page=%d", p.Prev)) } class="pagination-previous">Prev</a>
		} else {
			<span class="pagination-previous is-disabled">Prev</span>
		}
		if p.HasNext {
			<a href={ templ.URL(fmt.Sprintf("?page=%d", p.Next)) } class="pagination-next">Next</a>
		} else {
			<span class="pagination-next is-disabled">Next</span>
		}
		<ul class="pagination-list">
			if p.Current > 2 {
				<li>
					<a href={ templ.URL("?page=1") } class="pagination-link">
						{ fmt.Sprint("1") }
					</a>
				</li>
				<li><span class="pagination-ellipsis">&hellip;</span></li>
			}
			if p.Prev != 0 {
				<li>
					<a href={ templ.URL(fmt.Sprintf("?page=%d", p.Prev)) } class="pagination-link">
						{ fmt.Sprintf("%d", p.Prev) }
					</a>
				</li>
			}
			<li>
				<span class="pagination-link is-current">
					{ fmt.Sprintf("%d", p.Current) }
				</span>
			</li>
			if p.HasNext {
				<li>
					<a href={ templ.URL(fmt.Sprintf("?page=%d", p.Next)) } class="pagination-link">
						{ fmt.Sprintf("%d", p.Next) }
					</a>
				</li>
			}
			if p.HasLast {
				<li><span class="pagination-ellipsis">&hellip;</span></li>
				<li>
					<a href={ templ.URL(fmt.Sprintf("?page=%d", p.Last)) } class="pagination-link">
						{ fmt.Sprintf("%d", p.Last) }
					</a>
				</li>
			}
		</ul>
	</nav>
}
