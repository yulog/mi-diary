package components

import (
	"fmt"
	"github.com/yulog/mi-diary/model"
)

var header = ""
var isOpen = false

func setHeader(h string) (string, error) {
	header = h
	return "", nil
}

func setIsOpen(f bool) (string, error) {
	isOpen = f
	return "", nil
}

templ Archive(title, profile string, items []model.Archive) {
	@Base(title, profile) {
		<div class="content">
			for _, item := range items {
				if header != item.YM && isOpen {
					{ setIsOpen(false) }
					@templ.Raw("</ul>")
				}
				if header != item.YM {
					{ setHeader(item.YM) }
					<a href={ templ.URL(fmt.Sprintf("/%s/archives/%s", profile, item.YM)) }>
						<h3>{ item.YM } ( { fmt.Sprintf("%d", item.YmCount) } )</h3>
					</a>
				}
				if !isOpen {
					{ setIsOpen(true) }
					@templ.Raw("<ul>")
				}
				<li>
					<a href={ templ.URL(fmt.Sprintf("/%s/archives/%s", profile, item.YMD)) }>
						{ item.YMD } ( { fmt.Sprintf("%d", item.YmdCount) } )
					</a>
				</li>
			}
			if isOpen {
				@templ.Raw("</ul>")
			}
			{ setHeader("") }
		</div>
	}
}
